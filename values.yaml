passbolt:
  replicaCount: 1
  image: passbolt/passbolt
  imageTag: 2.12.0-debian
  imagePullPolicy: IfNotPresent
  resources:
    limits:
      memory: 1Gi
      cpu: 300m
    requests:
      memory: 256Mi
      cpu: 50m
  ports:
    http: 80
    https: 443
  persistence:
    enabled: true
    ## database data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    accessMode: ReadWriteOnce
    size: 8Gi
    annotations: {}
  ingress:
    enabled: false
    # change this to your domain
    host: example.com
    annotations:
      kubernetes.io/ingress.class: nginx

mysql:
  image: mysql
  imageTag: 5.7
  ## Default: random 10 character string
  # mysqlRootPassword: secret=
  mysqlUser: passbolt
  ## Default: random 10 character string
  # mysqlPassword:
  mysqlDatabase: passbolt
  imagePullPolicy: IfNotPresent
  resources:
    limits:
      memory: 1Gi
      cpu: 300m
    requests:
      memory: 256Mi
      cpu: 50m
  persistence:
    enabled: true
    ## database data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    accessMode: ReadWriteOnce
    size: 8Gi
    annotations: {}
